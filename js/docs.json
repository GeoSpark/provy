{"provy": {"__name__": "provy", "core": {"__name__": "provy.core", "__doc__": null, "roles": {"__name__": "provy.core.roles", "Role": {"__methods__": [{"__name__": "change_dir_owner", "__doc__": null}, {"__name__": "change_file_owner", "__doc__": null}, {"__name__": "cleanup", "__doc__": "Base cleanup method. This is meant to be overriden and does not do anything.\nThe cleanup method is the method that provy calls after all Roles have been provisioned and is meant to allow Roles to perform any cleaning of resources or finish any pending operations.\n<em>Sample usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def cleanup(self):\n            pass\n</pre>"}, {"__name__": "ensure_dir", "__doc__": "Make sure the specified directory exists in the remote server.\n<em>Parameters</em>\ndirectory - Directory to be created if it does not exist.\nowner - If specified, the directory will be created under this user, otherwise the currently logged user is the owner.\nsudo - If specified, the directory is created under the super-user. This is particularly useful in conjunction with the owner parameter, to create folders for the owner where only the super-user can write.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.ensure_dir('/etc/my-path', owner='myuser', sudo=True)\n</pre>"}, {"__name__": "execute", "__doc__": "This method is the bread and butter of provy and is a base for most other methods that interact with remote servers.\nIt allows you to perform any shell action in the remote server. It is an abstraction over fabric's run and sudo methods.\n<em>Parameters</em>\nstdout - Defaults to True. If you specify this argument as False, the standard output of the command execution will not be displayed in the console.\nsudo - Defaults to False. Specifies whether this command needs to be run as the super-user.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.execute('ls /', stdout=False, sudo=True)\n</pre>"}, {"__name__": "execute_python", "__doc__": "Just an abstraction over execute. This method executes the python code that is passed with python -c.\nIt has the same arguments as execute.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.python_execute('import os; print os.curdir', stdout=False, sudo=True)\n</pre>"}, {"__name__": "extend_context", "__doc__": null}, {"__name__": "get_logged_user", "__doc__": "Returns the currently logged user in the remote server.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.context['my-user'] = self.get_logged_user()\n</pre>"}, {"__name__": "is_process_running", "__doc__": null}, {"__name__": "local_exists", "__doc__": "Returns True if the file exists locally.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            if self.local_exists('/tmp/my-file'):\n                # do something\n</pre>"}, {"__name__": "local_temp_dir", "__doc__": "Returns the path of a temporary directory in the local machine.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.context['source_dir'] = self.local_temp_dir()\n</pre>"}, {"__name__": "log", "__doc__": "Logs a message to the console with the hour prepended.\n<em>Sample usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.log('Hello World')\n</pre>"}, {"__name__": "md5_local", "__doc__": null}, {"__name__": "md5_remote", "__doc__": null}, {"__name__": "provision", "__doc__": "Base provision method. This is meant to be overriden and does not do anything.\nThe provision method of each Role is what provy calls on to provision servers.\n<em>Sample usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            pass\n</pre>"}, {"__name__": "provision_role", "__doc__": "Provisions a role inside your role. This method is the way to call other roles if you don't need to call any methods other than provision.\nprovision_role keeps the context and lifecycle for the current server when calling the role and makes sure it is disposed correctly.\n<em>Sample usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.provision_role(SomeOtherRole)\n</pre>"}, {"__name__": "put_file", "__doc__": null}, {"__name__": "read_remote_file", "__doc__": null}, {"__name__": "register_template_loader", "__doc__": "Register the <<package_name>> module as a valid source for templates in Jinja2.\nJinja2 will look inside a folder called 'templates' in the specified module.\nIt is paramount that this module can be imported by python. The path must be well-known or be a sub-path of the provyfile.py directory.\n<em>Sample usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.register_template_loader('my.full.namespace')\n</pre>"}, {"__name__": "remote_exists", "__doc__": "Returns True if the file exists in the remote server.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            if self.remote_exists('/tmp/my-file'):\n                # do something\n</pre>"}, {"__name__": "remote_exists_dir", "__doc__": "Returns True if the directory exists in the remote server.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            if self.remote_exists_dir('/tmp'):\n                # do something\n</pre>"}, {"__name__": "remote_symlink", "__doc__": null}, {"__name__": "remote_temp_dir", "__doc__": "Returns the path of a temporary directory in the remote server.\n<em>Sample Usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.context['target_dir'] = self.remote_temp_dir()\n</pre>"}, {"__name__": "remove_file", "__doc__": null}, {"__name__": "render", "__doc__": null}, {"__name__": "replace_file", "__doc__": null}, {"__name__": "schedule_cleanup", "__doc__": "Makes sure that this role will be cleaned up properly after the server has been provisioned. Call this method in your provision method if you need your role's cleanup method to be called.\n<strong>Warning</strong>: If you are using the proper ways of calling roles (provision_role, using) in your role, you do not need to call this method.\n<em>Sample usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.schedule_cleanup()\n</pre>"}, {"__name__": "update_file", "__doc__": null}, {"__name__": "using", "__doc__": null}, {"__name__": "write_to_temp_file", "__doc__": null}], "__name__": "Role", "__fullName__": "provy.core.roles.Role", "__module__": "provy.core.roles", "__doc__": "Base Role class. This is the class that is inherited by all provy's roles.\nThis class provides many utility methods for interacting with the remote server.\n<em>Sample usage</em>\n<pre class=\"sh_python\">\n    class MySampleRole(Role):\n        def provision(self):\n            self.register_template_loader('my.full.namespace')\n            self.execute('ls /home/myuser', sudo=False, stdout=False)\n</pre>"}, "__doc__": null}}, "__doc__": null, "more": {"__name__": "provy.more", "__doc__": null, "centos": {"__name__": "provy.more.centos", "package": {"pip": {"PipRole": {"__methods__": [{"__name__": "does_package_has_update", "__doc__": null}, {"__name__": "ensure_package_installed", "__doc__": null}, {"__name__": "ensure_package_up_to_date", "__doc__": null}, {"__name__": "get_package_latest_version", "__doc__": null}, {"__name__": "get_package_remote_version", "__doc__": null}, {"__name__": "is_package_installed", "__doc__": null}, {"__name__": "provision", "__doc__": null}], "__name__": "PipRole", "__fullName__": "provy.more.centos.package.pip.PipRole", "__module__": "provy.more.centos.package.pip", "__doc__": null}, "__name__": "provy.more.centos.package.pip", "__doc__": null}, "__name__": "provy.more.centos.package", "yum": {"__name__": "provy.more.centos.package.yum", "YumRole": {"__methods__": [{"__name__": "ensure_gpg_key", "__doc__": null}, {"__name__": "ensure_package_installed", "__doc__": null}, {"__name__": "ensure_up_to_date", "__doc__": null}, {"__name__": "ensure_yum_source", "__doc__": null}, {"__name__": "force_update", "__doc__": null}, {"__name__": "get_last_update_date", "__doc__": null}, {"__name__": "has_source", "__doc__": null}, {"__name__": "is_package_installed", "__doc__": null}, {"__name__": "provision", "__doc__": null}, {"__name__": "store_update_date", "__doc__": null}], "__name__": "YumRole", "__fullName__": "provy.more.centos.package.yum.YumRole", "__module__": "provy.more.centos.package.yum", "__doc__": null}, "__doc__": null}, "__doc__": null}, "__doc__": null, "users": {"__name__": "provy.more.centos.users", "__doc__": null, "user": {"__name__": "provy.more.centos.users.user", "__doc__": null, "UserRole": {"__methods__": [{"__name__": "ensure_group", "__doc__": null}, {"__name__": "ensure_user", "__doc__": null}, {"__name__": "group_exists", "__doc__": null}, {"__name__": "user_exists", "__doc__": null}, {"__name__": "user_in_group", "__doc__": null}], "__name__": "UserRole", "__fullName__": "provy.more.centos.users.user.UserRole", "__module__": "provy.more.centos.users.user", "__doc__": null}}}}, "debian": {"web": {"tornado": {"TornadoRole": {"__methods__": [{"__name__": "provision", "__doc__": null}], "__name__": "TornadoRole", "__fullName__": "provy.more.debian.web.tornado.TornadoRole", "__module__": "provy.more.debian.web.tornado", "__doc__": null}, "__name__": "provy.more.debian.web.tornado", "__doc__": null}, "__name__": "provy.more.debian.web", "__doc__": null, "nginx": {"__name__": "provy.more.debian.web.nginx", "__doc__": null, "NginxRole": {"__methods__": [{"__name__": "available_site_for", "__doc__": null}, {"__name__": "cleanup", "__doc__": null}, {"__name__": "create_site", "__doc__": null}, {"__name__": "enabled_site_for", "__doc__": null}, {"__name__": "ensure_conf", "__doc__": null}, {"__name__": "ensure_restart", "__doc__": null}, {"__name__": "ensure_site_disabled", "__doc__": null}, {"__name__": "ensure_site_enabled", "__doc__": null}, {"__name__": "provision", "__doc__": null}, {"__name__": "restart", "__doc__": null}], "__name__": "NginxRole", "__fullName__": "provy.more.debian.web.nginx.NginxRole", "__module__": "provy.more.debian.web.nginx", "__doc__": null}}}, "monitoring": {"__name__": "provy.more.debian.monitoring", "supervisor": {"SupervisorRole": {"__methods__": [{"__name__": "cleanup", "__doc__": null}, {"__name__": "config", "__doc__": null}, {"__name__": "ensure_config_update", "__doc__": null}, {"__name__": "ensure_restart", "__doc__": null}, {"__name__": "provision", "__doc__": null}, {"__name__": "restart", "__doc__": null}, {"__name__": "update_config_file", "__doc__": null}, {"__name__": "update_init_script", "__doc__": null}, {"__name__": "with_program", "__doc__": null}], "__name__": "SupervisorRole", "__fullName__": "provy.more.debian.monitoring.supervisor.SupervisorRole", "__module__": "provy.more.debian.monitoring.supervisor", "__doc__": null}, "__name__": "provy.more.debian.monitoring.supervisor", "__doc__": null}, "__doc__": null}, "users": {"__name__": "provy.more.debian.users", "user": {"__name__": "provy.more.debian.users.user", "__doc__": null, "UserRole": {"__methods__": [{"__name__": "ensure_group", "__doc__": null}, {"__name__": "ensure_user", "__doc__": null}, {"__name__": "group_exists", "__doc__": null}, {"__name__": "user_exists", "__doc__": null}, {"__name__": "user_in_group", "__doc__": null}], "__name__": "UserRole", "__fullName__": "provy.more.debian.users.user.UserRole", "__module__": "provy.more.debian.users.user", "__doc__": null}}, "__doc__": null, "ssh": {"__name__": "provy.more.debian.users.ssh", "__doc__": null, "SSHRole": {"__methods__": [{"__name__": "ensure_ssh_key", "__doc__": null}, {"__name__": "generate_key_pair", "__doc__": null}, {"__name__": "generate_ssh_key", "__doc__": null}, {"__name__": "write_keys", "__doc__": null}], "__name__": "SSHRole", "__fullName__": "provy.more.debian.users.ssh.SSHRole", "__module__": "provy.more.debian.users.ssh", "__doc__": null}}}, "package": {"pip": {"PipRole": {"__methods__": [{"__name__": "does_package_has_update", "__doc__": null}, {"__name__": "ensure_package_installed", "__doc__": null}, {"__name__": "ensure_package_up_to_date", "__doc__": null}, {"__name__": "get_package_latest_version", "__doc__": null}, {"__name__": "get_package_remote_version", "__doc__": null}, {"__name__": "is_package_installed", "__doc__": null}, {"__name__": "provision", "__doc__": null}], "__name__": "PipRole", "__fullName__": "provy.more.debian.package.pip.PipRole", "__module__": "provy.more.debian.package.pip", "__doc__": null}, "__name__": "provy.more.debian.package.pip", "__doc__": null}, "__name__": "provy.more.debian.package", "__doc__": null, "aptitude": {"__name__": "provy.more.debian.package.aptitude", "AptitudeRole": {"__methods__": [{"__name__": "ensure_aptitude_source", "__doc__": null}, {"__name__": "ensure_gpg_key", "__doc__": null}, {"__name__": "ensure_package_installed", "__doc__": null}, {"__name__": "ensure_up_to_date", "__doc__": null}, {"__name__": "force_update", "__doc__": null}, {"__name__": "get_last_update_date", "__doc__": null}, {"__name__": "has_source", "__doc__": null}, {"__name__": "is_package_installed", "__doc__": null}, {"__name__": "provision", "__doc__": null}, {"__name__": "store_update_date", "__doc__": null}], "__name__": "AptitudeRole", "__fullName__": "provy.more.debian.package.aptitude.AptitudeRole", "__module__": "provy.more.debian.package.aptitude", "__doc__": null}, "__doc__": null}}, "cache": {"__name__": "provy.more.debian.cache", "varnish": {"__name__": "provy.more.debian.cache.varnish", "VarnishRole": {"__methods__": [{"__name__": "cleanup", "__doc__": null}, {"__name__": "ensure_conf", "__doc__": null}, {"__name__": "ensure_restart", "__doc__": null}, {"__name__": "ensure_vcl", "__doc__": null}, {"__name__": "provision", "__doc__": null}, {"__name__": "restart", "__doc__": null}], "__name__": "VarnishRole", "__fullName__": "provy.more.debian.cache.varnish.VarnishRole", "__module__": "provy.more.debian.cache.varnish", "__doc__": null}, "__doc__": null}, "__doc__": null}, "vcs": {"__name__": "provy.more.debian.vcs", "git": {"__name__": "provy.more.debian.vcs.git", "__doc__": null, "GitRole": {"__methods__": [{"__name__": "ensure_repository", "__doc__": null}, {"__name__": "provision", "__doc__": null}], "__name__": "GitRole", "__fullName__": "provy.more.debian.vcs.git.GitRole", "__module__": "provy.more.debian.vcs.git", "__doc__": null}}, "__doc__": null}, "__name__": "provy.more.debian", "__doc__": null}}}}
